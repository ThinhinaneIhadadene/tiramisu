if (${USE_GPU})
    add_subdirectory(linear_algebra/blas/level3/sgemm/gpu)
    add_subdirectory(linear_algebra/chain_mm/gpu)
    if (${USE_CUDNN})
        add_subdirectory(DNN/blocks/LSTM/gpu)
        add_subdirectory(DNN/blocks/LSTM/gpu_lib)
    endif()
endif()
add_subdirectory(DNN/layers/convolution/direct/cpu)
add_subdirectory(DNN/layers/convolution/direct/cpu_32channels)
add_subdirectory(DNN/layers/convolution/direct/sparse)
add_subdirectory(DNN/layers/convolution/direct/sparse_32channels)
add_subdirectory(DNN/layers/convolution/direct/cpu_sparse_with_dense)
add_subdirectory(DNN/layers/bn/cpu)
add_subdirectory(DNN/layers/relu/cpu)
add_subdirectory(DNN/layers/maxpool/cpu)
add_subdirectory(DNN/layers/transpose_conv)
add_subdirectory(DNN/blocks/conv2/cpu/dense)
add_subdirectory(DNN/blocks/LSTM/cpu)
add_subdirectory(DNN/blocks/LSTM/cpu_lib)
add_subdirectory(DNN/blocks/vggBlock/cpu/dense)
add_subdirectory(DNN/blocks/fusedresNet/cpu/dense)
add_subdirectory(DNN/blocks/DenseNetBlock/cpu/dense)
add_subdirectory(DNN/blocks/Conv-ReLU-MaxPool/cpu/dense)
add_subdirectory(DNN/blocks/Conv-ReLU-MaxPool/cpu/sparse)
add_subdirectory(DNN/blocks/Resize-Conv-ReLU-MaxPool/cpu/dense)
add_subdirectory(DNN/blocks/Conv-Relu-FC-Softmax/cpu/dense)
